{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jessica/Desktop/common_ground/src/screens/RegistrationScreen/RegistrationScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fullName = _useState2[0],\n    setFullName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Home', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Already got an account? \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 77\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"names":["React","useState","KeyboardAwareScrollView","styles","firebase","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"sources":["/Users/jessica/Desktop/common_ground/src/screens/RegistrationScreen/RegistrationScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\nimport { firebase } from '../../firebase/config'\n\nexport default function RegistrationScreen({navigation}) {\n    const [fullName, setFullName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const onFooterLinkPress = () => {\n        navigation.navigate('Login')\n    }\n\n    const onRegisterPress = () => {\n        if (password !== confirmPassword) {\n            alert(\"Passwords don't match.\")\n            return\n        }\n    \n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((response) => {\n                const uid = response.user.uid\n                const data = {\n                    id: uid,\n                    email,\n                    fullName,\n                };\n                const usersRef = firebase.firestore().collection('users')\n                usersRef\n                    .doc(uid)\n                    .set(data)\n                    .then(() => {\n                        navigation.navigate('Home', {user: data})\n                    })\n                    .catch((error) => {\n                        alert(error)\n                    });\n            })\n            .catch((error) => {\n                alert(error)\n        });\n    }\n\n    return (\n        <View style={styles.container}>\n            <KeyboardAwareScrollView\n                style={{ flex: 1, width: '100%' }}\n                keyboardShouldPersistTaps=\"always\">\n                <Image\n                    style={styles.logo}\n                    source={require('../../../assets/icon.png')}\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='Full Name'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setFullName(text)}\n                    value={fullName}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholder='E-mail'\n                    placeholderTextColor=\"#aaaaaa\"\n                    onChangeText={(text) => setEmail(text)}\n                    value={email}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Password'\n                    onChangeText={(text) => setPassword(text)}\n                    value={password}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TextInput\n                    style={styles.input}\n                    placeholderTextColor=\"#aaaaaa\"\n                    secureTextEntry\n                    placeholder='Confirm Password'\n                    onChangeText={(text) => setConfirmPassword(text)}\n                    value={confirmPassword}\n                    underlineColorAndroid=\"transparent\"\n                    autoCapitalize=\"none\"\n                />\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => onRegisterPress()}>\n                    <Text style={styles.buttonTitle}>Create account</Text>\n                </TouchableOpacity>\n                <View style={styles.footerView}>\n                    <Text style={styles.footerText}>Already got an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\n                </View>\n            </KeyboardAwareScrollView>\n        </View>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}